import logging, requests, sqlite3, telebot
from telebot import types
from bs4 import BeautifulSoup

bot = telebot.TeleBot('405295345:AAEiq-A3mEVsE203a0qOM3z2QCpPOlMKbZ0')
logger = telebot.logger
telebot.logger.setLevel(logging.ERROR)

nmaps_chat = '-1001136617457'
mods_chat = '-240980847'
roads_chat = '-227479062'

db = sqlite3.connect('database.db')
c = db.cursor()
c.execute('CREATE TABLE IF NOT EXISTS roads (username text, chat_message_id text, mods_message_id text, roads_message_id text)')
c.execute('CREATE TABLE IF NOT EXISTS banned (username text)')
db.commit()
c.close()
db.close()


def private_chat(message):
    if message.chat.type == 'private':
        return True


@bot.message_handler(commands=['start', 'home'])
def home(message):
    if not private_chat(message):
        return
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.row('üìå –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏')
    keyboard.row('üîé –ü–æ–∏—Å–∫ –≤ –ö–ª—É–±–µ', 'üîé –ü–æ–∏—Å–∫ –≤ –ü—Ä–∞–≤–∏–ª–∞—Ö')
    keyboard.row('üö´ –°–æ–æ–±—â–∏—Ç—å –æ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–∏')
    keyboard.row('üìö –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', '‚úè –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.', reply_markup=keyboard)


@bot.message_handler(regexp='üìå –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏')
def bookmarks(message):
    if not private_chat(message):
        return
    keyboard = types.InlineKeyboardMarkup()
    url1 = types.InlineKeyboardButton(text='–ü—Ä–∞–≤–∏–ª–∞', url='https://yandex.ru/support/nmaps/rules_2.html')
    url2 = types.InlineKeyboardButton(text='–ö–ª—É–±', url='https://yandex.ru/blog/narod-karta')
    url3 = types.InlineKeyboardButton(text='–ü–ö–ö', url='https://pkk5.rosreestr.ru/')
    url4 = types.InlineKeyboardButton(text='–§–ò–ê–°', url='https://fias.nalog.ru/')
    url5 = types.InlineKeyboardButton(text='–ï–ì–†–ü365', url='https://egrp365.ru/map/')
    url6 = types.InlineKeyboardButton(text='TerraServer', url='https://www.terraserver.com/')
    url7 = types.InlineKeyboardButton(text='–†–µ—Ñ–æ—Ä–º–∞ –ñ–ö–•', url='https://www.reformagkh.ru/')
    keyboard.add(url1, url2, url3, url4, url5, url6, url7)
    bot.send_message(message.chat.id, '–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç –Ω–∞–∂–º–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞.', reply_markup=keyboard)
    home(message)


@bot.message_handler(regexp='üîé –ü–æ–∏—Å–∫')
def search(message):
    if not private_chat(message):
        return
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.row('‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è')
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—Ä–∞–∑—É –¥–ª—è –ø–æ–∏—Å–∫–∞.', reply_markup=keyboard)
    if message.text == 'üîé –ü–æ–∏—Å–∫ –≤ –ü—Ä–∞–≤–∏–ª–∞—Ö':
        bot.register_next_step_handler(message, search_rules)
    elif message.text == 'üîé –ü–æ–∏—Å–∫ –≤ –ö–ª—É–±–µ':
        bot.register_next_step_handler(message, search_club)
    elif message.text == '‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è':
        home(message)


def search_club(message):
    if message.text == '‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è':
        home(message)
        return
    page = requests.get('https://yandex.ru/blog/narod-karta/search?text=' + message.text.replace(' ', '+'))
    soup = BeautifulSoup(page.text, 'lxml')
    answer = ''
    for item in soup.find_all('a', class_='b-serp-item'):
        pass
        title = item.find('h2').text
        link = 'https://yandex.ru' + item['href']
        answer += '[' + title + '](' + link + ')\n'
        answer += '____________________\n'
    if not answer:
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
    else:
        bot.send_message(message.chat.id, answer, parse_mode='markdown', disable_web_page_preview=True)
    home(message)


def search_rules(message):
    if message.text == '‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è':
        home(message)
        return
    page = requests.get('https://yandex.ru/support/search-results/?text=' + message.text.replace(' ', '+') + '&service=nmaps-guide')
    soup = BeautifulSoup(page.text, 'lxml')
    answer = ''
    for item in soup.find_all('a', class_='serp__item'):
        if '...' in item.find_all('div')[0].text:
            title = item.find_all('div')[0].text.split('...')[0]
        else:
            title = item.find_all('div')[0].text.split('‚Äî')[0]
        excerpt = item.find_all('div')[1].text
        link = 'https://yandex.ru' + item['href']
        answer += '[' + title + '](' + link + '): ' + excerpt + '\n'
        answer += '____________________\n'
    if not answer:
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
    else:
        bot.send_message(message.chat.id, answer, parse_mode='markdown', disable_web_page_preview=True)
    home(message)


@bot.message_handler(content_types=['text'])
def roads(message):
    if '#–ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ' in message.text:
        db = sqlite3.connect('database.db')
        c = db.cursor()
        c.execute('SELECT username FROM banned WHERE username = ?', [str(message.from_user.username)])
        if c.fetchall():
            bot.reply_to(message, '–í—ã –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.')
            return

        bot.send_message(message.chat.id, '@' + message.from_user.username + ', —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –°–ø–∞—Å–∏–±–æ!')

        keyboard = types.InlineKeyboardMarkup()
        keyboard.row(types.InlineKeyboardButton(text='‚Ü© –ü–µ—Ä–µ–¥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º', callback_data='road_mod_approve'))
        keyboard.row(types.InlineKeyboardButton(text='üî´ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', callback_data='road_mod_request_info'))
        keyboard.row(types.InlineKeyboardButton(text='üö´ –í–∞–Ω–¥–∞–ª–∏–∑–º', callback_data='road_mod_ban'))
        mods_message = bot.send_message(mods_chat, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @' + message.from_user.username + ' –æ—Å—Ç–∞–≤–∏–ª —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ—Å—å–±–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.', reply_markup=keyboard)
        bot.forward_message(mods_chat, nmaps_chat, message.message_id)
        c.execute('INSERT INTO roads VALUES (?, ?, ?, ?)', [str(message.from_user.username), str(message.message_id), str(mods_message.message_id), str(0)])
        db.commit()
        db.close()


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    db = sqlite3.connect('database.db')
    c = db.cursor()

    if call.data == 'road_mod_approve':
        bot.edit_message_text('‚úÖ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º', chat_id=call.message.chat.id, message_id=call.message.message_id)

        keyboard = types.InlineKeyboardMarkup()
        keyboard.row(types.InlineKeyboardButton(text='üöß –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', callback_data='road_closed'))
        keyboard.row(types.InlineKeyboardButton(text='üöó –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —Å–Ω—è—Ç–æ', callback_data='road_opened'))
        keyboard.row(types.InlineKeyboardButton(text='‚ö† –ò–Ω—Ñ–æ—Ç–æ—á–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', callback_data='info_added'))
        keyboard.row(types.InlineKeyboardButton(text='üî´ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', callback_data='road_request_info'))
        roads_message = bot.send_message(roads_chat, '–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –ü–æ—è–≤–∏–ª–∞—Å—å –Ω–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–∏.', reply_markup=keyboard)

        c.execute('SELECT chat_message_id FROM roads WHERE mods_message_id = ?', [str(call.message.message_id)])
        chat_message_id = c.fetchall()[0][0]
        bot.forward_message(roads_chat, nmaps_chat, chat_message_id)

        c.execute('UPDATE roads SET roads_message_id = ? WHERE chat_message_id = ?', [str(roads_message.message_id), str(chat_message_id)])
    elif call.data == 'road_mod_request_info':
        bot.edit_message_text('üìã –û–∂–∏–¥–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', chat_id=call.message.chat.id, message_id=call.message.message_id)
    elif call.data == 'road_mod_ban':
        bot.edit_message_text('üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω', chat_id=call.message.chat.id, message_id=call.message.message_id)
        c.execute('INSERT INTO banned SELECT username FROM roads WHERE mods_message_id = ?', [str(call.message.message_id)])
    elif call.data == 'road_closed':
        bot.edit_message_text('‚úÖ –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', chat_id=call.message.chat.id, message_id=call.message.message_id)
        c.execute('SELECT chat_message_id FROM roads WHERE roads_message_id = ?', [call.message.message_id])
        chat_message_id = c.fetchall()
        bot.send_message(nmaps_chat, '–ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Å–ø–∞—Å–∏–±–æ!', reply_to_message_id=chat_message_id)
    elif call.data == 'road_opened':
        bot.edit_message_text('‚úÖ –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —Å–Ω—è—Ç–æ', chat_id=call.message.chat.id, message_id=call.message.message_id)
        c.execute('SELECT chat_message_id FROM roads WHERE roads_message_id = ?', [call.message.message_id])
        chat_message_id = c.fetchall()
        bot.send_message(nmaps_chat, '–ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —Å–Ω—è—Ç–æ, —Å–ø–∞—Å–∏–±–æ!', reply_to_message_id=chat_message_id)
    elif call.data == 'info_added':
        bot.edit_message_text('‚úÖ –ò–Ω—Ñ–æ—Ç–æ—á–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', chat_id=call.message.chat.id, message_id=call.message.message_id)
        c.execute('SELECT chat_message_id FROM roads WHERE roads_message_id = ?', [call.message.message_id])
        chat_message_id = c.fetchall()
        bot.send_message(nmaps_chat, '–ò–Ω—Ñ–æ—Ç–æ—á–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Å–ø–∞—Å–∏–±–æ!', reply_to_message_id=chat_message_id)
    elif call.data == 'road_request_info':
        bot.edit_message_text('üìã –û–∂–∏–¥–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', chat_id=call.message.chat.id, message_id=call.message.message_id)
        c.execute('INSERT INTO banned SELECT username FROM roads WHERE mods_message_id = ?', [str(call.message.message_id)])

    db.commit()
    db.close()


if __name__ == '__main__':
    bot.polling()
